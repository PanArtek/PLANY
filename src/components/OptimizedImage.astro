---
interface Props {
  src: string;
  alt: string;
  width: number;
  height?: number;
  class?: string;
  sizes?: string;
  loading?: 'eager' | 'lazy';
  fetchpriority?: 'high' | 'low' | 'auto';
}

const { 
  src, 
  alt, 
  width, 
  height = Math.round(width * 0.75), // Default 4:3 aspect ratio
  class: className = '', 
  sizes = '(max-width: 1280px) 100vw, 1280px',
  loading = 'lazy',
  fetchpriority = 'auto'
} = Astro.props;

// For critical images (hero, above the fold), use:
// loading="eager" fetchpriority="high"

// In a real implementation, we would generate different image sizes and formats
// For now, we'll just use placeholder styling
---

<img 
  src={src} 
  alt={alt} 
  width={width} 
  height={height} 
  loading={loading}
  fetchpriority={fetchpriority}
  class={`bg-gray-200 flex items-center justify-center text-gray-400 ${className}`}
  style={`aspect-ratio: ${width} / ${height};`}
/>

<style>
  /* Prevent layout shift by setting a default aspect ratio */
  img {
    display: block;
    max-width: 100%;
    height: auto;
  }
</style>